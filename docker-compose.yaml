version: '2'

services:
  orderer0:
    container_name: orderer0
    image: hyperledger/fabric-orderer
    environment:
      - ORDERER_GENERAL_LEDGERTYPE=ram 
      - ORDERER_GENERAL_BATCHTIMEOUT=10s 
      - ORDERER_GENERAL_MAXMESSAGECOUNT=10 
      - ORDERER_GENERAL_BATCHSIZE_MAXMESSAGECOUNT=10 
      - ORDERER_GENERAL_MAXWINDOWSIZE=1000 
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0 
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENPORT=7050 
      - ORDERER_RAMLEDGER_HISTORY_SIZE=100 
      - ORDERER_GENERAL_ORDERERTYPE=solo 
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    ports:
      - 7050:7050

  peer0:
    container_name: peer0
    image: hyperledger/fabric-peer
    environment:
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_NEXT=true
      - CORE_LOGGING_LEVEL=Debug
      - CORE_PEER_ENDORSER_ENABLED=true
      - CORE_PEER_COMMITTER_ENABLED=true
      - CORE_PEER_GOSSIP_ORGLEADER=true
      - CORE_PEER_GOSSIP_IGNORESECURITY=true
      - CORE_PEER_ID=peer0
      - CORE_PEER_NETWORKID=net1
    volumes:
        - /var/run/:/host/var/run/
    ports:
      - 7051:7051
      - 7053:7053
    command: /bin/bash -c 'sleep 5 && peer node start -o orderer0:7050 '
    depends_on:
      - orderer0

  cli:
    container_name: cli
    image: hyperledger/fabric-peer
    tty: true
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_LOGGING_LEVEL=DEBUG
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash -c 'sleep 10 &&peer channel create -o orderer0:7050 -c myc1 && CORE_PEER_ADDRESS=peer0:7051 peer channel join -b myc1.block'
    volumes:
        - /var/run/:/host/var/run/
    depends_on:
      - orderer0
      - peer0